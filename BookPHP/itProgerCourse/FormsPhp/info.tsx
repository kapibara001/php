/**
 * Для того, чтобы начать обрабатывать форму, нужно в HTML-разметке формы задать место, где будет обрабатываться форма(параметр 
 * action="...(путь до файла обработчика)",
 * и метод, с помощью которого данные полетят на обработку - POST или GET (их больше, но это база).
 * 
 * Методы $_GET и $_POST - ассоциативные массивы (форма: GET/POST = ["key1"=>"value1", ....]). 
 * В качестве значений туда попадают имена HTML-полей, которые передаются через форму: (<input type="text" name="inputfield"> - 
 * будет прмиеним способ получения(в зависимости от метода): $value = $_GET/POST['inputfield']) - "текст из поля"
 * 
 * При обработке методом GET данные передаются через URL строку, поэтому это считается небезопасным методом и нужен он
 * для того, чтобы менять какие-то динамические данные на страничке с случае необходимости
 * 
 * При обработке методом POST данные передаются скрытно, нигде это не отслеживается видимым для глаза способом. 
 * 
 * В целом работа $_GET и $_POST одинакова: и команды, и синтаксис и т.п. Различия лишь в способе передачи
 * 
 * Существует довольно полезная команда print_r(), которая выведет весь ассоциативный массив, то есть туда можно передать $_GET или 
 * $_POST в качестве аргумента 
 * 
 * Для перенаправления пользователя используется команда header("Location: имя файла/просто ссылка на любой сайт")
 * 
 * Для принудительного окончания работы PHP файла-обработчика и не только применима команда exit - все то, что будет после 
 * нее в коде(ниже), не будет выполняться.
 * 
 * Если файл представляет собой чисто PHP-код без визуальной(клиентской) части(просто обработка чего-то и перенаправление), то следует
 * начать файл с "<?php", и не закрывать этот тег. Вместо закрытия использовать команду exit;
 */